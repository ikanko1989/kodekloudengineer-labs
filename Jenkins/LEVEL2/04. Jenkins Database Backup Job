There is a requirement to create a Jenkins job to automate the database backup. Below you can find more details to accomplish this task:

Click on the Jenkins button on the top bar to access the Jenkins UI. Login using username admin and password Adm!n321.
Create a Jenkins job named database-backup.
Configure it to take a database dump of the kodekloud_db01 database present on the Database server in Stratos Datacenter, the database user is kodekloud_roy and password is asdfgdsd.


The dump should be named in db_$(date +%F).sql format, where date +%F is the current date.
Copy the db_$(date +%F).sql dump to the Backup Server under location /home/clint/db_backups.
Further, schedule this job to run periodically at */10 * * * * (please use this exact schedule format).

Note:
You might need to install some plugins and restart Jenkins service. So, we recommend clicking on Restart Jenkins when installation is complete and no jobs are running on plugin installation/update page i.e update centre. Also, Jenkins UI sometimes gets stuck when Jenkins service restarts in the back end. In this case please make sure to refresh the UI page.
Please make sure to define you cron expression like this */10 * * * * (this is just an example to run job every 10 minutes).
For these kind of scenarios requiring changes to be done in a web UI, please take screenshots so that you can share it with us for review in case your task is marked incomplete. You may also consider using a screen recording software such as loom.com to record and share your work.





############################
SOLUTION
############################

JENKINS SERVER--->DB SERVER(sql dump &scp to)-->STORAGE SERVER

0)Login to DB server,generate keys and copy generated pub key to Storage server authorized_keys: 
thor@jumphost ~$ ssh peter@stdb01
peter@stdb01's password: 
Last login: Wed Feb  5 10:31:13 2025 from 172.16.239.3

[peter@stdb01 ~]$ ssh-keygen -t rsa
[peter@stdb01 ~]$ ssh-copy-id clint@stbkp01

Now should be able to login from DB server to Storage server without pass:
[peter@stdb01 ~]$ ssh clint@stbkp01
[clint@stbkp01 db_backups]$ pwd
/home/clint/db_backups
[clint@stbkp01 db_backups]$ ls

1)Go to Manage Jenkins/Plugins/Available plugins/ and install "Git" and "SSH,SSH Credentials,SSH Build Agents "plugins with selected option "Restart Jenkins when installation is complete and no jobs are running"

2)Go to Manage Jenkins/Credentials/Domains(Global)/+Add Credentials(UN:peter,Pass:Sp!dy,ID:Database Server)

3)Go to Manage Jenkins/Configure System/SSH remote hosts/Hostname:stdb01,Port:22,Credentials:peter,Check Connection/Save

4)Clicking New Item from the Jenkins dashboard,select "Freestyle Job", and then giving the item a name "database-backub"

5)Click on created "database-backub" job and:
Configure/Add Build Steps/Execute shell on remote host using ssh/SSH site:peter@stdb01:22/Command:mysqldump -u kodekloud_roy -pasdfgdsd kodekloud_db01 > db_$(date +%F).sql scp -o StrictHostKeyChecking=no db_$(date +%F).sql clint@stbkp01:/home/clint/db_backups/
Configure/Build Triggers/Build periodically/ */10 * * * * and Save

6)Click on created "database-backup" job and Build now

Jenkins Console Output:
Started by user admin
Running as SYSTEM
Building in workspace /var/lib/jenkins/workspace/database-backup
[SSH] script:

mysqldump -u kodekloud_roy -pasdfgdsd kodekloud_db01 > db_$(date +%F).sql 
scp -o StrictHostKeyChecking=no db_$(date +%F).sql clint@stbkp01:/home/clint/db_backups/

[SSH] executing...

[SSH] completed
[SSH] exit-status: 0

Finished: SUCCESS

Check on DB server:
clint@stbkp01 db_backups]$ ls
db_2025-02-05.sql

