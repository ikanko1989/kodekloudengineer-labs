root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ✖ cat provider.tf 
  provider "aws" {
  region                  = "us-east-1"
  access_key              = "xxxxxxxxxxxxxx"
  secret_key              = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}



root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ➜  cat s3bucket.tf 
resource "aws_s3_bucket" "s3_bucket_ivan" {
  bucket = "my-terraform-state-ivan"
  acl    = "private"

  versioning {
    enabled = true
  }
}


root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ➜  terraform init

Initializing the backend...

Initializing provider plugins...
- Finding latest version of hashicorp/aws...
- Installing hashicorp/aws v6.4.0...
- Installed hashicorp/aws v6.4.0 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ➜  terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_s3_bucket.s3_bucket_ivan will be created
  + resource "aws_s3_bucket" "s3_bucket_ivan" {
      + acceleration_status         = (known after apply)
      + acl                         = "private"
      + arn                         = (known after apply)
      + bucket                      = "my-terraform-state-ivan"
      + bucket_domain_name          = (known after apply)
      + bucket_prefix               = (known after apply)
      + bucket_region               = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = "us-east-1"
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + versioning {
          + enabled    = true
          + mfa_delete = false
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.
╷
│ Warning: Argument is deprecated
│ 
│   with aws_s3_bucket.s3_bucket_ivan,
│   on s3bucket.tf line 1, in resource "aws_s3_bucket" "s3_bucket_ivan":
│    1: resource "aws_s3_bucket" "s3_bucket_ivan" {
│ 
│ versioning is deprecated. Use the aws_s3_bucket_versioning resource instead.
│ 
│ (and 3 more similar warnings elsewhere)
╵

──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.

root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ➜  terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_s3_bucket.s3_bucket_ivan will be created
  + resource "aws_s3_bucket" "s3_bucket_ivan" {
      + acceleration_status         = (known after apply)
      + acl                         = "private"
      + arn                         = (known after apply)
      + bucket                      = "my-terraform-state-ivan"
      + bucket_domain_name          = (known after apply)
      + bucket_prefix               = (known after apply)
      + bucket_region               = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = "us-east-1"
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + versioning {
          + enabled    = true
          + mfa_delete = false
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.
╷
│ Warning: Argument is deprecated
│ 
│   with aws_s3_bucket.s3_bucket_ivan,
│   on s3bucket.tf line 1, in resource "aws_s3_bucket" "s3_bucket_ivan":
│    1: resource "aws_s3_bucket" "s3_bucket_ivan" {
│ 
│ versioning is deprecated. Use the aws_s3_bucket_versioning resource instead.
│ 
│ (and 3 more similar warnings elsewhere)
╵

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_s3_bucket.s3_bucket_ivan: Creating...
aws_s3_bucket.s3_bucket_ivan: Creation complete after 1s [id=my-terraform-state-ivan]
╷
│ Warning: Argument is deprecated
│ 
│   with aws_s3_bucket.s3_bucket_ivan,
│   on s3bucket.tf line 1, in resource "aws_s3_bucket" "s3_bucket_ivan":
│    1: resource "aws_s3_bucket" "s3_bucket_ivan" {
│ 
│ versioning is deprecated. Use the aws_s3_bucket_versioning resource instead.
│ 
│ (and one more similar warning elsewhere)
╵

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ➜  terraform show
# aws_s3_bucket.s3_bucket_ivan:
resource "aws_s3_bucket" "s3_bucket_ivan" {
    acl                         = "private"
    arn                         = "arn:aws:s3:::my-terraform-state-ivan"
    bucket                      = "my-terraform-state-ivan"
    bucket_domain_name          = "my-terraform-state-ivan.s3.amazonaws.com"
    bucket_region               = "us-east-1"
    bucket_regional_domain_name = "my-terraform-state-ivan.s3.us-east-1.amazonaws.com"
    force_destroy               = false
    hosted_zone_id              = "Z3AQBSTGFYJSTF"
    id                          = "my-terraform-state-ivan"
    object_lock_enabled         = false
    region                      = "us-east-1"
    request_payer               = "BucketOwner"
    tags_all                    = {}

    grant {
        id          = "ed67b0dfe82a61ff59f700457c5a0199ca74e8f4195b01d34b36ade3d9ed28c7"
        permissions = [
            "FULL_CONTROL",
        ]
        type        = "CanonicalUser"
    }

    server_side_encryption_configuration {
        rule {
            bucket_key_enabled = false

            apply_server_side_encryption_by_default {
                sse_algorithm = "AES256"
            }
        }
    }

    versioning {
        enabled    = true
        mfa_delete = false
    }
}



root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ➜  cat backend.tf 
terraform {
  backend "s3" {
    bucket = "my-terraform-state-ivan"
    key    = "terraform-state-file"
    region = "us-east-1"
  }
}



root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ✖ aaws secretsmanager create-secret --name my-new-database-password --secret-string "YourSecurePassword"
{
    "ARN": "arn:aws:secretsmanager:us-east-1:637423283722:secret:my-new-database-password-Kzytsa",
    "Name": "my-new-database-password",
    "VersionId": "baa7a32c-feaa-42bd-884a-51611affda02"
}


root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ✖ cat db.tf 
data "aws_secretsmanager_secret_version" "database_password" {
  secret_id = "my-database-password"
}

resource "aws_db_instance" "my_secret_db" {
  identifier        = "rds-db-instance"
  allocated_storage = 20
  storage_type      = "gp2"
  engine            = "mysql"
  engine_version    = "5.7"
  instance_class    = "db.t3.micro"
  username          = "admin"
  password          = data.aws_secretsmanager_secret_version.database_password.secret_string  # Using the retrieved secret value
}

root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ➜  



root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ➜  cat db.tf 
data "aws_secretsmanager_secret_version" "database_password" {
  secret_id = "my-new-database-password"
}

resource "aws_db_instance" "my_secret_db" {
  identifier        = "rds-db-instance"
  allocated_storage = 20
  storage_type      = "gp2"
  engine            = "mysql"
  engine_version    = "5.7"
  instance_class    = "db.t3.micro"
  username          = "admin"
  password          = data.aws_secretsmanager_secret_version.database_password.secret_string  # Using the retrieved secret value
}

root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ➜  terraform init

Initializing the backend...

Initializing provider plugins...
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v6.4.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ➜  terraform plan
data.aws_secretsmanager_secret_version.database_password: Reading...
aws_s3_bucket.s3_bucket_ivan: Refreshing state... [id=my-terraform-state-ivan]
data.aws_secretsmanager_secret_version.database_password: Read complete after 0s [id=my-new-database-password|AWSCURRENT]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_db_instance.my_secret_db will be created
  + resource "aws_db_instance" "my_secret_db" {
      + address                               = (known after apply)
      + allocated_storage                     = 20
      + apply_immediately                     = false
      + arn                                   = (known after apply)
      + auto_minor_version_upgrade            = true
      + availability_zone                     = (known after apply)
      + backup_retention_period               = (known after apply)
      + backup_target                         = (known after apply)
      + backup_window                         = (known after apply)
      + ca_cert_identifier                    = (known after apply)
      + character_set_name                    = (known after apply)
      + copy_tags_to_snapshot                 = false
      + database_insights_mode                = (known after apply)
      + db_name                               = (known after apply)
      + db_subnet_group_name                  = (known after apply)
      + dedicated_log_volume                  = false
      + delete_automated_backups              = true
      + domain_fqdn                           = (known after apply)
      + endpoint                              = (known after apply)
      + engine                                = "mysql"
      + engine_lifecycle_support              = (known after apply)
      + engine_version                        = "5.7"
      + engine_version_actual                 = (known after apply)
      + hosted_zone_id                        = (known after apply)
      + id                                    = (known after apply)
      + identifier                            = "rds-db-instance"
      + identifier_prefix                     = (known after apply)
      + instance_class                        = "db.t3.micro"
      + iops                                  = (known after apply)
      + kms_key_id                            = (known after apply)
      + latest_restorable_time                = (known after apply)
      + license_model                         = (known after apply)
      + listener_endpoint                     = (known after apply)
      + maintenance_window                    = (known after apply)
      + master_user_secret                    = (known after apply)
      + master_user_secret_kms_key_id         = (known after apply)
      + monitoring_interval                   = 0
      + monitoring_role_arn                   = (known after apply)
      + multi_az                              = (known after apply)
      + nchar_character_set_name              = (known after apply)
      + network_type                          = (known after apply)
      + option_group_name                     = (known after apply)
      + parameter_group_name                  = (known after apply)
      + password                              = (sensitive value)
      + performance_insights_enabled          = false
      + performance_insights_kms_key_id       = (known after apply)
      + performance_insights_retention_period = (known after apply)
      + port                                  = (known after apply)
      + publicly_accessible                   = false
      + region                                = "us-east-1"
      + replica_mode                          = (known after apply)
      + replicas                              = (known after apply)
      + resource_id                           = (known after apply)
      + skip_final_snapshot                   = false
      + snapshot_identifier                   = (known after apply)
      + status                                = (known after apply)
      + storage_throughput                    = (known after apply)
      + storage_type                          = "gp2"
      + tags_all                              = (known after apply)
      + timezone                              = (known after apply)
      + username                              = "admin"
      + vpc_security_group_ids                = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.
╷
│ Warning: Argument is deprecated
│ 
│   with aws_s3_bucket.s3_bucket_ivan,
│   on s3bucket.tf line 1, in resource "aws_s3_bucket" "s3_bucket_ivan":
│    1: resource "aws_s3_bucket" "s3_bucket_ivan" {
│ 
│ versioning is deprecated. Use the aws_s3_bucket_versioning resource instead.
│ 
│ (and 3 more similar warnings elsewhere)
╵

──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.




root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ➜  terraform apply
data.aws_secretsmanager_secret_version.database_password: Reading...
aws_s3_bucket.s3_bucket_ivan: Refreshing state... [id=my-terraform-state-ivan]
data.aws_secretsmanager_secret_version.database_password: Read complete after 1s [id=my-new-database-password|AWSCURRENT]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_db_instance.my_secret_db will be created
  + resource "aws_db_instance" "my_secret_db" {
      + address                               = (known after apply)
      + allocated_storage                     = 20
      + apply_immediately                     = false
      + arn                                   = (known after apply)
      + auto_minor_version_upgrade            = true
      + availability_zone                     = (known after apply)
      + backup_retention_period               = (known after apply)
      + backup_target                         = (known after apply)
      + backup_window                         = (known after apply)
      + ca_cert_identifier                    = (known after apply)
      + character_set_name                    = (known after apply)
      + copy_tags_to_snapshot                 = false
      + database_insights_mode                = (known after apply)
      + db_name                               = (known after apply)
      + db_subnet_group_name                  = (known after apply)
      + dedicated_log_volume                  = false
      + delete_automated_backups              = true
      + domain_fqdn                           = (known after apply)
      + endpoint                              = (known after apply)
      + engine                                = "mysql"
      + engine_lifecycle_support              = (known after apply)
      + engine_version                        = "5.7"
      + engine_version_actual                 = (known after apply)
      + hosted_zone_id                        = (known after apply)
      + id                                    = (known after apply)
      + identifier                            = "rds-db-instance"
      + identifier_prefix                     = (known after apply)
      + instance_class                        = "db.t3.micro"
      + iops                                  = (known after apply)
      + kms_key_id                            = (known after apply)
      + latest_restorable_time                = (known after apply)
      + license_model                         = (known after apply)
      + listener_endpoint                     = (known after apply)
      + maintenance_window                    = (known after apply)
      + master_user_secret                    = (known after apply)
      + master_user_secret_kms_key_id         = (known after apply)
      + monitoring_interval                   = 0
      + monitoring_role_arn                   = (known after apply)
      + multi_az                              = (known after apply)
      + nchar_character_set_name              = (known after apply)
      + network_type                          = (known after apply)
      + option_group_name                     = (known after apply)
      + parameter_group_name                  = (known after apply)
      + password                              = (sensitive value)
      + performance_insights_enabled          = false
      + performance_insights_kms_key_id       = (known after apply)
      + performance_insights_retention_period = (known after apply)
      + port                                  = (known after apply)
      + publicly_accessible                   = false
      + region                                = "us-east-1"
      + replica_mode                          = (known after apply)
      + replicas                              = (known after apply)
      + resource_id                           = (known after apply)
      + skip_final_snapshot                   = false
      + snapshot_identifier                   = (known after apply)
      + status                                = (known after apply)
      + storage_throughput                    = (known after apply)
      + storage_type                          = "gp2"
      + tags_all                              = (known after apply)
      + timezone                              = (known after apply)
      + username                              = "admin"
      + vpc_security_group_ids                = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.
╷
│ Warning: Argument is deprecated
│ 
│   with aws_s3_bucket.s3_bucket_ivan,
│   on s3bucket.tf line 1, in resource "aws_s3_bucket" "s3_bucket_ivan":
│    1: resource "aws_s3_bucket" "s3_bucket_ivan" {
│ 
│ versioning is deprecated. Use the aws_s3_bucket_versioning resource instead.
│ 
│ (and 3 more similar warnings elsewhere)
╵

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_db_instance.my_secret_db: Creating...
aws_db_instance.my_secret_db: Still creating... [10s elapsed]
aws_db_instance.my_secret_db: Still creating... [20s elapsed]
aws_db_instance.my_secret_db: Still creating... [30s elapsed]
aws_db_instance.my_secret_db: Still creating... [40s elapsed]
aws_db_instance.my_secret_db: Still creating... [50s elapsed]
aws_db_instance.my_secret_db: Still creating... [1m0s elapsed]
aws_db_instance.my_secret_db: Still creating... [1m10s elapsed]
aws_db_instance.my_secret_db: Still creating... [1m20s elapsed]
aws_db_instance.my_secret_db: Still creating... [1m30s elapsed]
aws_db_instance.my_secret_db: Still creating... [1m40s elapsed]
aws_db_instance.my_secret_db: Still creating... [1m50s elapsed]
aws_db_instance.my_secret_db: Still creating... [2m0s elapsed]
aws_db_instance.my_secret_db: Still creating... [2m10s elapsed]
aws_db_instance.my_secret_db: Still creating... [2m20s elapsed]
aws_db_instance.my_secret_db: Still creating... [2m30s elapsed]
aws_db_instance.my_secret_db: Still creating... [2m40s elapsed]
aws_db_instance.my_secret_db: Still creating... [2m50s elapsed]
aws_db_instance.my_secret_db: Still creating... [3m0s elapsed]
aws_db_instance.my_secret_db: Still creating... [3m10s elapsed]
aws_db_instance.my_secret_db: Still creating... [3m20s elapsed]
aws_db_instance.my_secret_db: Still creating... [3m30s elapsed]
aws_db_instance.my_secret_db: Still creating... [3m40s elapsed]
aws_db_instance.my_secret_db: Still creating... [3m50s elapsed]
aws_db_instance.my_secret_db: Still creating... [4m0s elapsed]
aws_db_instance.my_secret_db: Creation complete after 4m6s [id=db-EOGG62VE7VQOVPB7PVJWBIJIAE]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ➜  terraform show
# data.aws_secretsmanager_secret_version.database_password:
data "aws_secretsmanager_secret_version" "database_password" {
    arn            = "arn:aws:secretsmanager:us-east-1:637423283722:secret:my-new-database-password-Kzytsa"
    created_date   = "2025-07-24T12:10:27Z"
    id             = "my-new-database-password|AWSCURRENT"
    region         = "us-east-1"
    secret_id      = "my-new-database-password"
    secret_string  = "YourSecurePassword"
    version_id     = "baa7a32c-feaa-42bd-884a-51611affda02"
    version_stage  = "AWSCURRENT"
    version_stages = [
        "AWSCURRENT",
    ]
}

# aws_db_instance.my_secret_db:
resource "aws_db_instance" "my_secret_db" {
    address                               = "rds-db-instance.cvysumeoscp3.us-east-1.rds.amazonaws.com"
    allocated_storage                     = 20
    apply_immediately                     = false
    arn                                   = "arn:aws:rds:us-east-1:637423283722:db:rds-db-instance"
    auto_minor_version_upgrade            = true
    availability_zone                     = "us-east-1a"
    backup_retention_period               = 0
    backup_target                         = "region"
    backup_window                         = "08:05-08:35"
    ca_cert_identifier                    = "rds-ca-rsa2048-g1"
    copy_tags_to_snapshot                 = false
    customer_owned_ip_enabled             = false
    database_insights_mode                = "standard"
    db_subnet_group_name                  = "default"
    dedicated_log_volume                  = false
    delete_automated_backups              = true
    deletion_protection                   = false
    endpoint                              = "rds-db-instance.cvysumeoscp3.us-east-1.rds.amazonaws.com:3306"
    engine                                = "mysql"
    engine_lifecycle_support              = "open-source-rds-extended-support"
    engine_version                        = "5.7"
    engine_version_actual                 = "5.7.44-rds.20250213"
    hosted_zone_id                        = "Z2R2ITUGPM61AM"
    iam_database_authentication_enabled   = false
    id                                    = "db-EOGG62VE7VQOVPB7PVJWBIJIAE"
    identifier                            = "rds-db-instance"
    instance_class                        = "db.t3.micro"
    iops                                  = 0
    license_model                         = "general-public-license"
    listener_endpoint                     = []
    maintenance_window                    = "sat:07:05-sat:07:35"
    master_user_secret                    = []
    max_allocated_storage                 = 0
    monitoring_interval                   = 0
    multi_az                              = false
    network_type                          = "IPV4"
    option_group_name                     = "default:mysql-5-7"
    parameter_group_name                  = "default.mysql5.7"
    password                              = (sensitive value)
    performance_insights_enabled          = false
    performance_insights_retention_period = 0
    port                                  = 3306
    publicly_accessible                   = false
    region                                = "us-east-1"
    replicas                              = []
    resource_id                           = "db-EOGG62VE7VQOVPB7PVJWBIJIAE"
    skip_final_snapshot                   = false
    status                                = "available"
    storage_encrypted                     = false
    storage_throughput                    = 0
    storage_type                          = "gp2"
    tags_all                              = {}
    username                              = "admin"
    vpc_security_group_ids                = [
        "sg-05f44480b36421b9b",
    ]
}

# aws_s3_bucket.s3_bucket_ivan:
resource "aws_s3_bucket" "s3_bucket_ivan" {
    acl                         = "private"
    arn                         = "arn:aws:s3:::my-terraform-state-ivan"
    bucket                      = "my-terraform-state-ivan"
    bucket_domain_name          = "my-terraform-state-ivan.s3.amazonaws.com"
    bucket_region               = "us-east-1"
    bucket_regional_domain_name = "my-terraform-state-ivan.s3.us-east-1.amazonaws.com"
    force_destroy               = false
    hosted_zone_id              = "Z3AQBSTGFYJSTF"
    id                          = "my-terraform-state-ivan"
    object_lock_enabled         = false
    region                      = "us-east-1"
    request_payer               = "BucketOwner"
    tags                        = {}
    tags_all                    = {}

    grant {
        id          = "ed67b0dfe82a61ff59f700457c5a0199ca74e8f4195b01d34b36ade3d9ed28c7"
        permissions = [
            "FULL_CONTROL",
        ]
        type        = "CanonicalUser"
    }

    server_side_encryption_configuration {
        rule {
            bucket_key_enabled = false

            apply_server_side_encryption_by_default {
                sse_algorithm = "AES256"
            }
        }
    }

    versioning {
        enabled    = true
        mfa_delete = false
    }
}

root@aws-client ~/terraform-projects via 💠 default on ☁️  (us-east-1) ➜  terraform state list
data.aws_secretsmanager_secret_version.database_password
aws_db_instance.my_secret_db
aws_s3_bucket.s3_bucket_ivan





