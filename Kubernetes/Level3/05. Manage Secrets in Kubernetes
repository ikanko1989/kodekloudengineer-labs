The Nautilus DevOps team is working to deploy some tools in Kubernetes cluster. Some of the tools are licence based so that licence information needs to be stored securely within Kubernetes cluster. Therefore, the team wants to utilize Kubernetes secrets to store those secrets. Below you can find more details about the requirements:
1.We already have a secret key file beta.txt under /opt location on jump host. Create a generic secret named beta, it should contain the password/license-number present in beta.txt file.
2.Also create a pod named secret-xfusion.
3.Configure pod's spec as container name should be secret-container-xfusion, image should be ubuntu preferably with latest tag (remember to mention the tag with image). Use sleep command for container so that it remains in running state. Consume the created secret and mount it under /opt/demo within the container.
4.To verify you can exec into the container secret-container-xfusion, to check the secret key under the mounted path /opt/demo. Before hitting the Check button please make sure pod/pods are in running state, also validation can take some time to complete so keep patien


thor@jump_host ~$ cd /opt/
thor@jump_host /opt$ cat beta.txt 
5ecur3

thor@jump_host /opt$ kubectl create secret generic beta --from-file=password=/opt/beta.txt 
secret/beta created
thor@jump_host /opt$ kubectl describe secrets beta 
Name:         beta
Namespace:    default
Labels:       <none>
Annotations:  <none>

Type:  Opaque

Data
====
password:  7 bytes
thor@jump_host /opt$ kubectl get secrets beta -o yaml
apiVersion: v1
data:
  password: NWVjdXIzCg==
kind: Secret
metadata:
  creationTimestamp: "2023-11-29T13:24:50Z"
  name: beta
  namespace: default
  resourceVersion: "1973"
  uid: 43d3fed8-fc7a-4ea4-b3a3-3f61fcbb9ff6
type: Opaque


apiVersion: v1
kind: Pod
metadata:
  name: secret-xfusion
spec:
  containers:
    - name: secret-container-xfusion
      image: ubuntu:latest
      command: ["sleep", "2000"]
      volumeMounts:
        # name must match the volume name below
        - name: secret-volume
          mountPath: /opt/demo
          readOnly: true
  # The secret data is exposed to Containers in the Pod through a Volume.
  volumes:
    - name: secret-volume
      secret:
        secretName: beta
kubectl create -f pod1.yaml 




thor@jump_host /opt$ kubectl describe pod secret-xfusion 
Name:             secret-xfusion
Namespace:        default
Priority:         0
Service Account:  default
Node:             kodekloud-control-plane/172.17.0.2
Start Time:       Wed, 29 Nov 2023 13:37:22 +0000
Labels:           <none>
Annotations:      <none>
Status:           Running
IP:               10.244.0.5
IPs:
  IP:  10.244.0.5
Containers:
  secret-container-xfusion:
    Container ID:  containerd://6d13ebf8279d7770de9370bfff42544be86927f4f1c7eae8a2c41cbf7d8c1ca1
    Image:         ubuntu:latest
    Image ID:      docker.io/library/ubuntu@sha256:2b7412e6465c3c7fc5bb21d3e6f1917c167358449fecac8176c6e496e5c1f05f
    Port:          <none>
    Host Port:     <none>
    Command:
      sleep
      2000
    State:          Running
      Started:      Wed, 29 Nov 2023 13:37:28 +0000
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /opt/demo from secret-volume (ro)
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-phclb (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  secret-volume:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  beta
    Optional:    false
  kube-api-access-phclb:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  14s   default-scheduler  Successfully assigned default/secret-xfusion to kodekloud-control-plane
  Normal  Pulling    13s   kubelet            Pulling image "ubuntu:latest"
  Normal  Pulled     9s    kubelet            Successfully pulled image "ubuntu:latest" in 4.31729342s (4.317312929s including waiting)
  Normal  Created    9s    kubelet            Created container secret-container-xfusion
  Normal  Started    8s    kubelet            Started container secret-container-xfusion
  

thor@jump_host /opt$ kubectl exec -it secret-xfusion -c secret-container-xfusion -- sh
# cd /opt/demo    
# ls
password
# cat password
5ecur3
# 

