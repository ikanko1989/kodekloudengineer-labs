A python app needed to be Dockerized, and then it needs to be deployed on App Server 3. We have already copied a requirements.txt file (having the app dependencies) under /python_app/src/ directory on App Server 3. Further complete this task as per details mentioned below:
1.Create a Dockerfile under /python_app directory:
	Use any python image as the base image.
	Install the dependencies using requirements.txt file.
	Expose the port 3000.
	Run the server.py script using CMD.
2.Build an image named nautilus/python-app using this Dockerfile.
3.Once image is built, create a container named pythonapp_nautilus:
	Map port 3000 of the container to the host port 8099.
4.Once deployed, you can test the app using curl command on App Server 3.
curl http://localhost:8099/




[banner@stapp03 ~]$ cd /python_app/src/
[banner@stapp03 src]$ ls
requirements.txt  server.py

[banner@stapp03 src]$ cat requirements.txt 
Flask
[banner@stapp03 src]$ cat server.py 
from flask import Flask

# the all-important app variable:
app = Flask(__name__)

@app.route("/")
def hello():
    return "Welcome to xFusionCorp Industries!"

if __name__ == "__main__":
        app.config['TEMPLATES_AUTO_RELOAD'] = True
        app.run(host='0.0.0.0', debug=True, port=6400)



[root@stapp03 python_app]#  cat Dockerfile

# Use a python base image
FROM python:latest

# Set the working directory inside the container
WORKDIR /usr/src/app

# Copy requirements.txt to the working directory
COPY requirements.txt .

# Install app dependencies
RUN pip install -r requirements.txt

# Copy server.py to the working directory
COPY server.py .

# Expose port 3000
EXPOSE 3000

# Define the command to run the application
CMD ["python", "server.py"]


root@stapp03 src]# scp * /python_app/
[root@stapp03 src]# cd /python_app/
[root@stapp03 python_app]# ls
Dockerfile  requirements.txt  server.py  src

[root@stapp03 python_app]#  docker build -t nautilus/python-app .
Sending build context to Docker daemon  6.656kB
Step 1/7 : FROM python:latest
latest: Pulling from library/python
90e5e7d8b87a: Pull complete 
27e1a8ca91d3: Pull complete 
d3a767d1d12e: Pull complete 
711be5dc5044: Pull complete 
7ad48fee4003: Pull complete 
a319993f7bdd: Pull complete 
c5bc2fe650d8: Pull complete 
0303a8131ddc: Pull complete 
Digest: sha256:31ceea009f42df76371a8fb94fa191f988a25847a228dbeac35b6f8d2518a6ef
Status: Downloaded newer image for python:latest
 ---> caacd5b6b541
Step 2/7 : WORKDIR /usr/src/app
 ---> Running in 41b64cfcb57d
Removing intermediate container 41b64cfcb57d
 ---> 0001af51ae46
Step 3/7 : COPY requirements.txt .
 ---> d4e3d5714e94
Step 4/7 : RUN pip install -r requirements.txt
 ---> Running in e52a4a48421c
Collecting flask (from -r requirements.txt (line 1))
  Obtaining dependency information for flask from https://files.pythonhosted.org/packages/36/42/015c23096649b908c809c69388a805a571a3bea44362fe87e33fc3afa01f/flask-3.0.0-py3-none-any.whl.metadata
  Downloading flask-3.0.0-py3-none-any.whl.metadata (3.6 kB)
Collecting Werkzeug>=3.0.0 (from flask->-r requirements.txt (line 1))
  Obtaining dependency information for Werkzeug>=3.0.0 from https://files.pythonhosted.org/packages/c3/fc/254c3e9b5feb89ff5b9076a23218dafbc99c96ac5941e900b71206e6313b/werkzeug-3.0.1-py3-none-any.whl.metadata
  Downloading werkzeug-3.0.1-py3-none-any.whl.metadata (4.1 kB)
Collecting Jinja2>=3.1.2 (from flask->-r requirements.txt (line 1))
  Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 133.1/133.1 kB 4.9 MB/s eta 0:00:00
Collecting itsdangerous>=2.1.2 (from flask->-r requirements.txt (line 1))
  Downloading itsdangerous-2.1.2-py3-none-any.whl (15 kB)
Collecting click>=8.1.3 (from flask->-r requirements.txt (line 1))
  Obtaining dependency information for click>=8.1.3 from https://files.pythonhosted.org/packages/00/2e/d53fa4befbf2cfa713304affc7ca780ce4fc1fd8710527771b58311a3229/click-8.1.7-py3-none-any.whl.metadata
  Downloading click-8.1.7-py3-none-any.whl.metadata (3.0 kB)
Collecting blinker>=1.6.2 (from flask->-r requirements.txt (line 1))
  Obtaining dependency information for blinker>=1.6.2 from https://files.pythonhosted.org/packages/fa/2a/7f3714cbc6356a0efec525ce7a0613d581072ed6eb53eb7b9754f33db807/blinker-1.7.0-py3-none-any.whl.metadata
  Downloading blinker-1.7.0-py3-none-any.whl.metadata (1.9 kB)
Collecting MarkupSafe>=2.0 (from Jinja2>=3.1.2->flask->-r requirements.txt (line 1))
  Obtaining dependency information for MarkupSafe>=2.0 from https://files.pythonhosted.org/packages/51/94/9a04085114ff2c24f7424dbc890a281d73c5a74ea935dc2e69c66a3bd558/MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata
  Downloading MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.9 kB)
Downloading flask-3.0.0-py3-none-any.whl (99 kB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 99.7/99.7 kB 12.8 MB/s eta 0:00:00
Downloading blinker-1.7.0-py3-none-any.whl (13 kB)
Downloading click-8.1.7-py3-none-any.whl (97 kB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 97.9/97.9 kB 12.2 MB/s eta 0:00:00
Downloading werkzeug-3.0.1-py3-none-any.whl (226 kB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 226.7/226.7 kB 15.2 MB/s eta 0:00:00
Downloading MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (28 kB)
Installing collected packages: MarkupSafe, itsdangerous, click, blinker, Werkzeug, Jinja2, flask
Successfully installed Jinja2-3.1.2 MarkupSafe-2.1.3 Werkzeug-3.0.1 blinker-1.7.0 click-8.1.7 flask-3.0.0 itsdangerous-2.1.2
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.2.1 -> 23.3.1
[notice] To update, run: pip install --upgrade pip
Removing intermediate container e52a4a48421c
 ---> bc4d897d2714
Step 5/7 : COPY server.py .
 ---> 5b3cb04c2aa3
Step 6/7 : EXPOSE 3000
 ---> Running in 3c82b460599e
Removing intermediate container 3c82b460599e
 ---> 895b7d34c857
Step 7/7 : CMD ["python", "server.py"]
 ---> Running in 586afdb2d5bc
Removing intermediate container 586afdb2d5bc
 ---> 98172e81241d
Successfully built 98172e81241d
Successfully tagged nautilus/python-app:latest
[root@stapp03 python_app]# 


[root@stapp03 python_app]# docker image list
REPOSITORY                 TAG                 IMAGE ID                        CREATED             SIZE
nautilus/python-app   latest              98172e81241d        37 seconds ago      1.03GB
python                           latest              caacd5b6b541           5 weeks ago         1.02GB


[root@stapp03 src]# docker run -d -p 8099:3000 --name pythonapp_nautilus nautilus/python-app 

[root@stapp03 python_app]# docker ps -a
CONTAINER ID        IMAGE                 COMMAND              CREATED             STATUS              PORTS                    NAMES
f4f527cea091        nautilus/python-app   "python server.py"   49 seconds ago      Up 3 seconds        0.0.0.0:8099->3000/tcp   pythonapp_nautilus


[root@stapp03 python_app]# curl http://localhost:8099/
Welcome to xFusionCorp Industries!

